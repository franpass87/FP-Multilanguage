name: Build Plugin ZIP

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
      - 'V*'
      - '[0-9]*'
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: PHP Lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: PHP Syntax Check
        run: |
          find . -type f -name "*.php" -print0 | xargs -0 -n1 -P4 php -l

  build:
    name: Build ZIP
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      fail-fast: false
    outputs:
      ARTIFACT: ${{ steps.build_zip.outputs.ARTIFACT }}
      ARTIFACT_NAME: ${{ steps.build_zip.outputs.ARTIFACT_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - name: Build plugin archive
        id: build_zip
        run: |
          ./scripts/build-zip.sh
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build_zip.outputs.ARTIFACT_NAME }}
          path: ${{ steps.build_zip.outputs.ARTIFACT }}
          if-no-files-found: error

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    strategy:
      fail-fast: false
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.ARTIFACT_NAME }}
          path: dist
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-rc') || contains(github.ref_name, '-beta') }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ needs.build.outputs.ARTIFACT_NAME }}
          asset_name: ${{ needs.build.outputs.ARTIFACT_NAME }}
          asset_content_type: application/zip
