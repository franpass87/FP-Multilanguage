name: Deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  test-before-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer:v2
      
      - name: Install dependencies
        run: composer install --prefer-dist
      
      - name: Run tests
        run: vendor/bin/phpunit
      
      - name: Verify all tests pass
        run: |
          if [ $? -ne 0 ]; then
            echo "Tests failed! Deployment aborted."
            exit 1
          fi

  build:
    needs: test-before-deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer:v2
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Install production dependencies
        run: composer install --no-dev --optimize-autoloader --prefer-dist
      
      - name: Create build directory
        run: mkdir -p build
      
      - name: Create ZIP
        run: |
          cd fp-multilanguage
          zip -r ../build/fp-multilanguage-${{ steps.get_version.outputs.VERSION }}.zip . \
            -x "*.git*" "*.DS_Store" "**/node_modules/*" "**/vendor/bin/*"
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: plugin-zip
          path: build/*.zip
          retention-days: 30
  
  create-release:
    needs: build
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: plugin-zip
          path: build/
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Extract changelog for this version
        id: changelog
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          CHANGELOG=$(awk "/## \[$VERSION\]/,/## \[/" CHANGELOG.md | sed '$d' | tail -n +2)
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/*.zip
          body: ${{ steps.changelog.outputs.CHANGELOG }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
